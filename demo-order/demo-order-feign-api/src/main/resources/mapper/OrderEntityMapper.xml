<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.demo.order.feign.api.mapper.OrderEntityMapper">
  <resultMap id="BaseResultMap" type="cn.demo.order.feign.api.entity.OrderEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pay_money" jdbcType="DECIMAL" property="payMoney" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `user_id`, `pay_money`, `product_id`, `status`, `count`
  </sql>
  <select id="selectByExample" parameterType="cn.demo.order.feign.api.entity.OrderEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demo_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from demo_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from demo_order
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from demo_order
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.demo.order.feign.api.entity.OrderEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demo_order (`user_id`, `pay_money`, `product_id`, 
      `status`, `count`)
    values (#{userId,jdbcType=INTEGER}, #{payMoney,jdbcType=DECIMAL}, #{productId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demo_order
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            `user_id`,
          </if>
          <if test="record.payMoney != null">
            `pay_money`,
          </if>
          <if test="record.productId != null">
            `product_id`,
          </if>
          <if test="record.status != null">
            `status`,
          </if>
          <if test="record.count != null">
            `count`,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.payMoney != null">
            #{record.payMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.productId != null">
            #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.count != null">
            #{record.count,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="cn.demo.order.feign.api.entity.OrderEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from demo_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo_order
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            `id` = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            `user_id` = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.payMoney != null">
            `pay_money` = #{record.payMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.productId != null">
            `product_id` = #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.count != null">
            `count` = #{record.count,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo_order
    set `id` = #{record.id,jdbcType=INTEGER},
      `user_id` = #{record.userId,jdbcType=INTEGER},
      `pay_money` = #{record.payMoney,jdbcType=DECIMAL},
      `product_id` = #{record.productId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      `count` = #{record.count,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo_order
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            `user_id` = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.payMoney != null">
            `pay_money` = #{record.payMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.productId != null">
            `product_id` = #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.count != null">
            `count` = #{record.count,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    where `id` = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.demo.order.feign.api.entity.OrderEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo_order
    set `user_id` = #{userId,jdbcType=INTEGER},
      `pay_money` = #{payMoney,jdbcType=DECIMAL},
      `product_id` = #{productId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `count` = #{count,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into demo_order
    (`user_id`, `pay_money`, `product_id`, `status`, `count`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.payMoney,jdbcType=DECIMAL}, #{item.productId,jdbcType=INTEGER}, 
        #{item.status,jdbcType=INTEGER}, #{item.count,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into demo_order (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'user_id'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'pay_money'.toString() == column.value">
          #{item.payMoney,jdbcType=DECIMAL}
        </if>
        <if test="'product_id'.toString() == column.value">
          #{item.productId,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'count'.toString() == column.value">
          #{item.count,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="cn.demo.order.feign.api.entity.OrderEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from demo_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from demo_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into demo_order
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            `id`,
          </if>
          <if test="record.userId != null">
            `user_id`,
          </if>
          <if test="record.payMoney != null">
            `pay_money`,
          </if>
          <if test="record.productId != null">
            `product_id`,
          </if>
          <if test="record.status != null">
            `status`,
          </if>
          <if test="record.count != null">
            `count`,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.payMoney != null">
            #{record.payMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.productId != null">
            #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.count != null">
            #{record.count,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            `id` = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            `user_id` = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.payMoney != null">
            `pay_money` = #{record.payMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.productId != null">
            `product_id` = #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.count != null">
            `count` = #{record.count,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="cn.demo.order.feign.api.entity.OrderEntity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into demo_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      `user_id`,
      `pay_money`,
      `product_id`,
      `status`,
      `count`,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{userId,jdbcType=INTEGER},
      #{payMoney,jdbcType=DECIMAL},
      #{productId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{count,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        `id` = #{id,jdbcType=INTEGER},
      </if>
      `user_id` = #{userId,jdbcType=INTEGER},
      `pay_money` = #{payMoney,jdbcType=DECIMAL},
      `product_id` = #{productId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `count` = #{count,jdbcType=INTEGER},
    </trim>
  </insert>
</mapper>